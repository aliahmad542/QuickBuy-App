{
    "openapi": "3.0.0",
    "info": {
        "title": "Quickbuy API",
        "description": "API documentation for Quickbuy backend system.",
        "contact": {
            "email": "support@Quickbuy.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/cart-add/{productId}/{quantity}": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add a product to the cart",
                "operationId": "3ba652d958f3273f00cad90c93fba29d",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of the product to add",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "path",
                        "description": "Quantity of the product to add",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product added to cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not enough stock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not enough stock for product: iPhone 15"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Product] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get all items in the authenticated user's cart",
                "description": "Returns a list of products that the authenticated user has in their cart.",
                "operationId": "0ca1f75a9abf583421d58051f288490d",
                "responses": {
                    "200": {
                        "description": "Cart items retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cartItems": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "product": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 12
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "T-Shirt"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 19.99
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/buy-from-cart/{cartItemId}/{productId}/{quantity}": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Buy a product from cart and create a pending order",
                "operationId": "4c5cce4f80d21aff292566cbed2b69e7",
                "parameters": [
                    {
                        "name": "cartItemId",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "path",
                        "description": "Quantity to buy",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order placed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order placed successfully. Awaiting approval."
                                        },
                                        "order": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "total_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 39.99
                                                },
                                                "is_pending": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not enough quantity in cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not enough quantity in cart."
                                        },
                                        "product_name": {
                                            "type": "string",
                                            "example": "iPhone 14"
                                        },
                                        "requested_quantity": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "cart_quantity": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart or product not found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred during the order process."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[...]: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders for the authenticated user",
                "description": "Returns a list of orders placed by the currently authenticated user, including product name, total price, and status.",
                "operationId": "e03d921fea24d3ccd4f3cae85fbf903c",
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "orders": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "product_name": {
                                                        "type": "string",
                                                        "example": "Wireless Mouse"
                                                    },
                                                    "total_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 39.99
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "complete"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart-remove-item/{cartItemId}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove a specific product from the user's cart",
                "description": "Deletes a specific cart item based on its ID for the authenticated user.",
                "operationId": "5269fe17a09639709201055ffce52a99",
                "parameters": [
                    {
                        "name": "cartItemId",
                        "in": "path",
                        "description": "ID of the cart item to be removed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product removed from cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product removed from cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Cart] ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin-accept/{order_id}": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Accept a specific order by ID",
                "description": "Accept a pending order and update product quantity accordingly.",
                "operationId": "972cd12591badc4872f26148bbde0dd2",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "ID of the order to accept",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order accepted successfully. Product quantity updated."
                                        },
                                        "order": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "total_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 59.98
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "complete"
                                                },
                                                "is_pending": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order has already been accepted or processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order has already been accepted or processed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Order] 123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while accepting the order."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[...]: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin-reject/{order_id}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Reject and delete a specific pending order",
                "description": "This endpoint deletes a pending order permanently. If the order is already processed, it returns a message.",
                "operationId": "3b894a318631ab1871840a792199e601",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "ID of the order to reject and delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order rejected and deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order rejected and deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order has already been processed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order has already been processed (approved or rejected)."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Order] 123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error while rejecting the order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to reject and delete order."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[...]: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/buy-all-from-cart": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Buy all products in the authenticated user's cart",
                "operationId": "ceaea3fc6644221aafafcc995f0868e3",
                "responses": {
                    "200": {
                        "description": "All products purchased successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All products purchased successfully. Awaiting approval."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cart is empty or stock is not enough",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your cart is empty."
                                        },
                                        "product_name": {
                                            "type": "string",
                                            "example": "Samsung Galaxy"
                                        },
                                        "requested_quantity": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "available_quantity": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred during the order process."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[...]: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin-accept-all": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Accept all pending orders (admin only)",
                "description": "Marks all pending orders as complete and deducts the ordered quantity from the corresponding product stock.",
                "operationId": "9bf4592ecce356764030d01cfe764cf7",
                "responses": {
                    "200": {
                        "description": "All pending orders accepted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All pending orders have been accepted and product quantities updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No pending orders to accept.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No pending orders to accept."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while accepting the orders."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[...]: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin-reject": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Logically reject all pending orders (admin use)",
                "description": "Returns all orders with 'is_pending' = 1. No actual deletion or update occurs.",
                "operationId": "afda30f0aa92974428717306bef56f5b",
                "responses": {
                    "200": {
                        "description": "Pending orders logically rejected (listed only)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your orders have been logically rejected. No database changes were made."
                                        },
                                        "rejected_orders": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "total_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 149.99
                                                    },
                                                    "is_pending": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2025-06-05T14:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No pending orders found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No pending orders to reject."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while rejecting the orders."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[...]: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-order-quantity/{orderId}": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update the quantity of a pending order",
                "operationId": "ff560e3c9c2193f79ed197f6d70e4b8f",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity"
                                ],
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order quantity updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order quantity updated successfully."
                                        },
                                        "order": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "total_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 149.97
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order is not pending or not enough stock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not enough stock available for this product."
                                        },
                                        "product_name": {
                                            "type": "string",
                                            "example": "iPhone 15"
                                        },
                                        "requested_quantity": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "available_quantity": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order or Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Order] 99"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while updating the order quantity."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[...]: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/favorites/{productId}": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Add product to favorites",
                "description": "Adds a specific product to the authenticated user's favorites list.",
                "operationId": "addToFavorites",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of the product to add to favorites",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product added to favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to favorites"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product already in favorites or bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product already in your favorites"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Remove a product from favorites",
                "description": "Deletes a product from the authenticated user's favorites list.",
                "operationId": "removeFromFavorites",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of the product to be removed from favorites",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product removed from favorites successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product removed from favorites"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found in favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found in favorites"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": " show the favourite products for this user",
                "description": "Displays a list of products that the user has added to favorites with product details such as name, price, and image.",
                "operationId": "showFavorites",
                "responses": {
                    "200": {
                        "description": " list of favourites products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "favorites": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "perfect product"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 49.99
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "format": "url",
                                                        "example": "http://yourapp.com/storage/image.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - you have to log in"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": " Login with number ",
                "operationId": "1b9be0664655d22325f70e8c8d7d0bc7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "number",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "number": {
                                        "type": "string",
                                        "example": "0938762024"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "aliahmad1234"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "aliahmad1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": " You have successfully logged in"
                    },
                    "422": {
                        "description": " validation failed ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "number": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The number field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password must be at least 8 characters."
                                                    }
                                                },
                                                "password_confirmation": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "description": "Revokes the current access token to log the user out.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/add-products": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add a new product",
                "operationId": "e8548a69da85f5b03a5b5b9e0e342f0f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "store_id",
                                    "description",
                                    "quantity"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "iPhone 15"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 999.99
                                    },
                                    "store_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The latest iPhone model"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "image": {
                                        "description": "Optional product image (jpeg, png, jpg, gif)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your product has been added successfully"
                                        },
                                        "product": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "iPhone 15"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "example": 999.99
                                                },
                                                "store_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "The latest iPhone model"
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "products/iphone15.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-order/{cart_item}/{new_quantity}": {
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update quantity of a cart item",
                "description": "Allows an authenticated user to update the quantity of a product in their cart, ensuring product stock and order status are valid.",
                "operationId": "046629a5abb8167052b4bdd074ab3462",
                "parameters": [
                    {
                        "name": "cart_item",
                        "in": "path",
                        "description": "Cart item ID to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "new_quantity",
                        "in": "path",
                        "description": "New quantity for the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart item updated successfully."
                                        },
                                        "product_name": {
                                            "type": "string",
                                            "example": "Product A"
                                        },
                                        "updated_quantity": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "total_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 149.97
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or stock error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Order is not pending",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The order is not editable as it is not pending."
                                        },
                                        "order_status": {
                                            "type": "string",
                                            "example": "complete"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item or product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart item not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delete-order/{orderId}": {
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete a pending order",
                "operationId": "ecdb5b0f5cf72ad7bfcc5d688be834eb",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order deleted successfully."
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order cannot be deleted because it is not pending",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order cannot be deleted as it is no longer pending."
                                        },
                                        "order_status": {
                                            "type": "integer",
                                            "example": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Order] 99"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while deleting the order."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[...]: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile/photo": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user's profile photo",
                "operationId": "8dcd865ec5ea0f36ce3a26f9ca77baf8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "photo"
                                ],
                                "properties": {
                                    "photo": {
                                        "description": "The new profile photo to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile photo updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile photo updated successfully"
                                        },
                                        "photo_url": {
                                            "type": "string",
                                            "example": "https://yourdomain.com/storage/profile_photos/1/avatar.png"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "photo": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The photo must be an image."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Sign up a new user",
                "operationId": "af8a55a41e4763af60527cb9e9e20884",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "number",
                                    "password",
                                    "Location",
                                    "password_confirmation",
                                    "user_id"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "Ali"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Ahmad"
                                    },
                                    "number": {
                                        "type": "integer",
                                        "example": 938762024
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "aliahmad1234"
                                    },
                                    "Location": {
                                        "type": "string",
                                        "example": "Damascus, Syria"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "aliahmad1234"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "You are registered successfully"
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password must be at least 8 characters."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/create-store": {
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Create a new store",
                "description": "* @OA\\Post(\n*     path=\"/api/create-store\",\n*     summary=\"Create a new store\",\n*     tags={\"Stores\"},\n*     security={{\"bearerAuth\":{}}},\n*     @OA\\RequestBody(\n*         required=true,\n*         @OA\\MediaType(\n*             mediaType=\"multipart/form-data\",\n*             @OA\\Schema(\n*                 required={\"name\"},\n*                 @OA\\Property(\n*                     property=\"name\",\n*                     type=\"string\",\n*                     example=\"My Electronics Store\"\n*                 ),\n*                 @OA\\Property(\n*                     property=\"image\",\n*                     type=\"string\",\n*                     format=\"binary\",\n*                     description=\"Optional store image (jpeg, png, jpg, gif)\"\n*                 )\n*             )\n*         )\n*     ),\n*     @OA\\Response(\n*         response=201,\n*         description=\"Store created successfully\",\n*         @OA\\JsonContent(\n*             @OA\\Property(property=\"message\", type=\"string\", example=\"Your store has been created successfully\"),\n*             @OA\\Property(property=\"store\", type=\"object\",\n*                 @OA\\Property(property=\"id\", type=\"integer\", example=1),\n*                 @OA\\Property(property=\"name\", type=\"string\", example=\"My Electronics Store\"),\n*                 @OA\\Property(property=\"image\", type=\"string\", example=\"stores/1/store_image.jpg\")\n*             )\n*         )\n*     ),\n*     @OA\\Response(\n*         response=422,\n*         description=\"Validation error\",\n*         @OA\\JsonContent(\n*             @OA\\Property(property=\"errors\", type=\"object\",\n*                 @OA\\Property(\n*                     property=\"name\",\n*                     type=\"array\",\n*                     @OA\\Items(type=\"string\", example=\"The name field is required.\")\n*                 ),\n*                 @OA\\Property(\n*                     property=\"image\",\n*                     type=\"array\",\n*                     @OA\\Items(type=\"string\", example=\"The image must be a file of type: jpeg, png, jpg, gif.\")\n*                 )\n*             )\n*         )\n*     )\n* )",
                "operationId": "f3cf60804467fd982ee6f4561661f327",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "My Electronics Store"
                                    },
                                    "image": {
                                        "description": "Optional store image (jpeg, png, jpg, gif)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your store has been created successfully"
                                        },
                                        "store": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "My Electronics Store"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "stores/1/store_image.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The image must be a file of type: jpeg, png, jpg, gif."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get-store-with-products": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get all stores with their products",
                "operationId": "22d20796654cb7f8c4fae0eddb3e1e4b",
                "responses": {
                    "200": {
                        "description": "List of stores with their products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Fashion Store"
                                            },
                                            "image": {
                                                "type": "string",
                                                "example": "stores/fashion.jpg"
                                            },
                                            "image_url": {
                                                "type": "string",
                                                "example": "https://yourdomain.com/storage/stores/fashion.jpg"
                                            },
                                            "products": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 101
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "T-shirt"
                                                        },
                                                        "price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 19.99
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Comfortable cotton t-shirt"
                                                        },
                                                        "quantity": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "image": {
                                                            "type": "string",
                                                            "example": "products/tshirt.png"
                                                        },
                                                        "image_url": {
                                                            "type": "string",
                                                            "example": "https://yourdomain.com/storage/products/tshirt.png"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delete-store/{id}": {
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Delete a store by ID",
                "operationId": "83dad6353ebe95ce2f93df3e62ec3d97",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The store has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Store] 123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get authenticated user's info",
                "operationId": "48dce0f9c463b900bf81eee851585855",
                "responses": {
                    "200": {
                        "description": "User info retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "example": "ali"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "ahmad"
                                        },
                                        "number": {
                                            "type": "string",
                                            "example": "0999123456"
                                        },
                                        "location": {
                                            "type": "string",
                                            "example": "Damascus, Syria"
                                        },
                                        "profile_photo_url": {
                                            "type": "string",
                                            "example": "https://yourdomain.com/storage/profile_photos/user123.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/password": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user's password",
                "operationId": "57ddbc5bebe0cd30c268a0d8a4640660",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "oldpassword123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword456"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Current password is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Current password is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "new_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The new password must be at least 8 characters."
                                                    }
                                                },
                                                "new_password_confirmation": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The new password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/location": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user's location",
                "operationId": "e429967545cd52bba25134c9f8eb99e4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "location"
                                ],
                                "properties": {
                                    "location": {
                                        "type": "string",
                                        "example": "Damascus, Syria"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location updated successfully!"
                                        },
                                        "location": {
                                            "type": "string",
                                            "example": "Damascus, Syria"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "location": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The location field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Admin",
            "description": "Admin"
        },
        {
            "name": "Favorites",
            "description": "Favorites"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Stores",
            "description": "Stores"
        }
    ]
}